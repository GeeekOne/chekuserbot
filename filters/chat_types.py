from aiogram import types
from aiogram.filters import Filter
from sqlalchemy.future import select


from database.db import async_session
from database.models import GroupSettings, AdminSession

class ChatTypeFilter(Filter):
    def __init__(self, chat_types: list[str]) -> None:
        self.chat_types = chat_types

    async def __call__(self, message: types.Message) -> bool:
        return message.chat.type in self.chat_types

class IsAdmin(Filter):
    async def __call__(self, message: types.Message) -> bool:
        user_id = message.from_user.id

        async with async_session() as session:
            try:
                # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É –∏–∑ –±–∞–∑—ã
                result = await session.execute(
                    select(AdminSession.group_id).where(AdminSession.admin_id == user_id)
                )
                admin_session = result.scalar()

                if not admin_session:
                    await message.answer("–ì—Ä—É–ø–ø–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.")
                    return False

                group_id = admin_session

                # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –≥—Ä—É–ø–ø–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
                result = await session.execute(
                    select(GroupSettings).where(GroupSettings.group_id == group_id)
                )
                group_settings = result.scalar()

                if not group_settings:
                    await message.answer("‚ö†Ô∏è –ì—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞.")
                    return False

                # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
                admin_ids = group_settings.admin_ids.split(",")

                if str(user_id) not in admin_ids:
                    await message.delete()
                    return False

                return True

            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –≤ IsAdmin: {e}")
                await message.answer("‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–¥–º–∏–Ω–∞.")
                # await session.rollback()
                # print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {e}")
                return False

            # finally:
            #     await session.close()  # üü¢ –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é
            #     print("[LOG] üîí –°–µ—Å—Å–∏—è –≤ IsAdmin –∑–∞–∫—Ä—ã—Ç–∞")
