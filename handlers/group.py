import re

from aiogram import Bot, Router, F, types
from aiogram.filters import Command
from datetime import datetime, timedelta
from aiogram.exceptions import TelegramBadRequest

group_router = Router()


# –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ –≤—Ö–æ–¥–µ –≤ —á–∞—Ç
@group_router.message(F.new_chat_members)
async def delete_join_message(message: types.Message):
    await message.delete()


# –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ –≤—ã—Ö–æ–¥–µ –∏–∑ —á–∞—Ç–∞
@group_router.message(F.left_chat_member)
async def delete_leave_message(message: types.Message):
    await message.delete()


# –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –º—É—Ç–∞
def format_duration_with_emoji(duration: str) -> str:
    if duration.endswith("m"):
        return f"{duration[:-1]} –º–∏–Ω—É—Ç ‚è≥"
    elif duration.endswith("h"):
        return f"{duration[:-1]} —á–∞—Å–æ–≤ ‚è∞"
    elif duration.endswith("d"):
        return f"{duration[:-1]} –¥–Ω–µ–π üìÖ"
    return duration

# –ö–æ–º–∞–Ω–¥–∞ /mute
@group_router.message(Command("mute"))
async def mute_user(message: types.Message, bot: Bot):
    if not message.reply_to_message:
        return await message.answer("–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

    args = message.text.split()
    if len(args) < 2:
        return await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /mute <–≤—Ä–µ–º—è> (–Ω–∞–ø—Ä–∏–º–µ—Ä 10m, 2h, 1d)")

    duration = args[1]
    target_user = message.reply_to_message.from_user
    duration_seconds = None

    # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å–µ–∫—É–Ω–¥—ã
    if duration.endswith("m"):
        duration_seconds = int(duration[:-1]) * 60
    elif duration.endswith("h"):
        duration_seconds = int(duration[:-1]) * 3600
    elif duration.endswith("d"):
        duration_seconds = int(duration[:-1]) * 86400
    else:
        return await message.reply(
            "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
            "m - –º–∏–Ω—É—Ç—ã"
            "h - —á–∞—Å—ã"
            "d - –¥–Ω–∏")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∏–∫–Ω–µ–π–º–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if target_user.username:
        mention = f"@{target_user.username}"
    else:
        mention = f'<a href="tg://user?id={target_user.id}">{target_user.full_name}</a>'

    try:
        until_date = message.date + timedelta(seconds=duration_seconds)
        await bot.restrict_chat_member(
            chat_id=message.chat.id,
            user_id=target_user.id,
            permissions=types.ChatPermissions(can_send_messages=False),
            until_date=until_date
        )
        await message.reply(
            f"üîá {mention} –∑–∞–º—å—é—á–µ–Ω –Ω–∞ <b>{format_duration_with_emoji(duration)}</b>.",
            parse_mode="HTML"
        )

    except TelegramBadRequest as e:
        await message.reply(f"–û—à–∏–±–∫–∞: {e}")

# –ö–æ–º–∞–Ω–¥–∞ /ban
@group_router.message(Command("ban"))
async def ban_user(message: types.Message, bot: Bot):
    if not message.reply_to_message:
        return await message.answer("–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

    target_user = message.reply_to_message.from_user

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∏–∫–Ω–µ–π–º–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if target_user.username:
        mention = f"@{target_user.username}"
    else:
        mention = f'<a href="tg://user?id={target_user.id}">{target_user.full_name}</a>'


    try:
        await bot.ban_chat_member(chat_id=message.chat.id, user_id=target_user.id)
        await message.reply(f"üö´ {mention} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω.", parse_mode="HTML")

    except TelegramBadRequest as e:
        await message.reply(f"–û—à–∏–±–∫–∞: {e}")

# –ö–æ–º–∞–Ω–¥–∞ /unmute
@group_router.message(Command("unmute"))
async def unmute_user(message: types.Message, bot: Bot):
    if not message.reply_to_message:
        return await message.reply("–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —Ä–∞–∑–º—å—é—Ç–∏—Ç—å –µ–≥–æ.")

    target_user = message.reply_to_message.from_user

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∏–∫–Ω–µ–π–º–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if target_user.username:
        mention = f"@{target_user.username}"
    else:
        mention = f'<a href="tg://user?id={target_user.id}">{target_user.full_name}</a>'


    try:
        await bot.restrict_chat_member(
            chat_id=message.chat.id,
            user_id=target_user.id,
            permissions=types.ChatPermissions(can_send_messages=True)
        )
        await message.reply(f"üîä {mention} —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç.", parse_mode="HTML")

    except TelegramBadRequest as e:
        await message.reply(f"–û—à–∏–±–∫–∞: {e}")


# @group_router.message(F.text.lower() == "–ü—Ä–∞–≤–∏–ª–∞ —Ä–µ–∫–ª–∞–º—ã")
# async def add_rules(message: types.Message):
#     await message.answer()
